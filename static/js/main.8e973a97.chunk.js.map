{"version":3,"sources":["Metronome/TempoSlider.js","Metronome/TempoDisplay.js","Metronome/BeatDisplay.js","Metronome/MetronomePlayPause.js","Metronome/MetronomeContainer.js","Metronome/MetronomeHelper.js","App.js","index.js"],"names":["TempoSlider","props","handleChange","bind","handleIncClick","handleDecClick","e","this","onTempoChange","target","value","onClick","tempo","className","type","min","max","step","id","onChange","React","Component","TempoDisplay","validity","valid","pattern","BeatDisplay","playing","currentStep","steps","length","MetronomePlayPause","handleClick","onMetronomePlayPause","MetronomeContainer","state","secPerMin","handleSliderChange","handleBPMTextChange","handlePlayPress","handleTempoCrement","setState","clock","stop","tickEvent","clear","updateTempo","start","callbackAtTime","handleTick","audioContext","currentTime","repeat","deadline","newCurrentStep","osc","createOscillator","frequency","setValueAtTime","linearRampToValueAtTime","amplifier","createGain","connect","gain","destination","setTimeout","disconnect","triggerSound","AudioContext","window","webkitAudioContext","WAAClock","newTempo","timeStretch","Number","parseInt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e973a97.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass TempoSlider extends React.Component{\n    constructor(props){\n        super(props)\n        this.handleChange = this.handleChange.bind(this);\n        this.handleIncClick = this.handleIncClick.bind(this);\n        this.handleDecClick = this.handleDecClick.bind(this);\n    }\n\n    handleChange(e){\n        this.props.onTempoChange(e.target.value);\n    }\n\n    handleDecClick(){\n        this.props.onClick(-1);\n    }\n    handleIncClick(){\n        this.props.onClick(1);\n    }\n\n    render(){\n        const tempo = this.props.tempo;\n        return(\n            <div className=\"slide-container\">\n                <input type=\"button\" value=\"-\" className=\"tempo-button\" onClick={this.handleDecClick}/>\n                <input type=\"range\" min=\"30\" max=\"300\" step=\"1\" value={tempo} className=\"slider\" id=\"myRange\" onChange={this.handleChange}/>\n                <input type=\"button\" value=\"+\" className=\"tempo-button\" onClick={this.handleIncClick}/>\n            </div>\n        )\n    }\n}\n\nTempoSlider.propTypes = {\n    tempo: PropTypes.number.isRequired,\n};\n\nexport default TempoSlider;","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nclass TempoDisplay extends React.Component {\n    constructor(props){\n        super(props)\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e){\n        this.props.onTempoChange(e.target.value,e.target.validity.valid);\n    }\n\n    render(){\n        const tempo = this.props.tempo;\n        return(\n            <div>\n                BPM: \n                <input type=\"text\" pattern=\"[\\d]{1,4}\" value={tempo} className=\"tempo-display\" onChange={this.handleChange}></input>\n            </div>\n        )\n    };\n}\n\nTempoDisplay.propTypes = {\n    tempo: PropsTypes.number.isRequired,\n};\n\nexport default TempoDisplay;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction BeatDisplay(props){\n    const { playing, currentStep, steps } = props;\n    return(\n        <div className=\"step-display\">\n            {`Current Beat ${playing ? currentStep % steps.length + 1 : '-' }`} \n        </div>\n    );\n}\n\nBeatDisplay.propTypes = {\n    playing: PropTypes.bool.isRequired,\n    currentStep: PropTypes.number.isRequired,\n    steps: PropTypes.array.isRequired,\n};\n\nexport default BeatDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MetronomePlayPause extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e){\n        this.props.onMetronomePlayPause(e.target.value)\n    }\n\n    render(){\n        const { playing } = this.props\n        return(\n            <button className=\"play-button\" onClick={this.handleClick}>\n              {playing ? 'Stop' : 'Start'}\n            </button>\n        );\n    }\n}\n\nMetronomePlayPause.propTypes = {\n    playing: PropTypes.bool.isRequired,\n};\n\nexport default MetronomePlayPause;","import React from 'react';\nimport './Metronome.css';\nimport WAAClock from 'waaclock';\nimport TempoSlider from './TempoSlider';\nimport TempoDisplay from './TempoDisplay';\nimport BeatDisplay from './BeatDisplay';\nimport MetronomePlayPause from './MetronomePlayPause';\nimport { triggerSound } from './MetronomeHelper';\n\nclass MetronomeContainer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentStep: 0,\n            steps: [1, 1, 1, 1],\n            playing: false,\n            tempo: 120,\n            secPerMin: 60\n        }\n        this.handleSliderChange = this.handleSliderChange.bind(this);\n        this.handleBPMTextChange = this.handleBPMTextChange.bind(this);\n        this.handlePlayPress = this.handlePlayPress.bind(this);\n        this.handleTempoCrement = this.handleTempoCrement.bind(this);\n    }\n\n    handlePlayPress(){\n      if (!this.state.playing){\n        //Check Tempo isn't outside the range\n        this.updateTempo(this.state.tempo);\n        this.setState({\n          currentStep: -1,\n          playing: true\n        }, () => {\n          this.clock.start();\n          this.tickEvent = this.clock.callbackAtTime(\n            this.handleTick.bind(this),\n            this.audioContext.currentTime\n          ).repeat(this.state.secPerMin/this.state.tempo);\n        })\n      } else {\n        this.setState(\n          {playing: false},\n          () => {\n            this.clock.stop();\n            this.tickEvent.clear();\n            this.tickEvent = null;\n          })\n      }\n    }\n  \n    handleTick({ deadline }){\n      const {currentStep, steps} = this.state;\n      const newCurrentStep = currentStep + 1;\n      if (steps[newCurrentStep % steps.length]) {\n        triggerSound(this.audioContext, deadline);\n      }\n      this.setState({currentStep : newCurrentStep})\n    }\n  \n    componentDidMount(){\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.audioContext = new AudioContext();\n      this.clock = new WAAClock(this.audioContext);\n    }\n  \n    componentWillUnmount(){\n      this.audioContext.clear();\n    }\n  \n    handleSliderChange(newTempo){\n      this.updateTempo(newTempo);\n      if (this.state.playing){\n        this.clock.timeStretch(this.audioContext.currentTime, [this.tickEvent], this.state.tempo / newTempo);\n        this.setState({currentStep: 0});\n      }\n    }\n\n    handleBPMTextChange(newTempo,valid){\n      if (!this.state.playing && valid){\n        //Allow easier typing of tempo - update on metronome start\n        this.setState({tempo: newTempo});\n      }\n    }\n\n    handleTempoCrement(value){\n      let newTempo = this.state.tempo;\n      newTempo = Number.parseInt(newTempo);\n      newTempo += (value == 1) ? 1 : -1;\n      this.updateTempo(newTempo)\n    }\n\n    updateTempo(newTempo){\n      newTempo = (newTempo < 300) ? newTempo : 300;\n      newTempo = (newTempo > 30) ? newTempo : 30;\n      this.setState({tempo: newTempo});\n    }\n\n    render(){\n        const { currentStep, steps, playing, tempo} = this.state;\n        return(\n          <div>\n            <TempoDisplay tempo={tempo} onTempoChange={this.handleBPMTextChange} />\n            <TempoSlider tempo={tempo} onTempoChange={this.handleSliderChange} onClick={this.handleTempoCrement}/>\n            <BeatDisplay playing={playing} currentStep={currentStep} steps={steps}/>\n            <MetronomePlayPause playing={playing} onMetronomePlayPause={this.handlePlayPress} />\n          </div>\n        );\n    }\n} \n\nexport default MetronomeContainer;","export function triggerSound(audioContext, deadline){\n    const osc = audioContext.createOscillator();\n\n    osc.frequency.setValueAtTime(330, deadline);\n    osc.frequency.linearRampToValueAtTime(\n      50,\n      deadline + 0.15\n    );\n\n    const amplifier = audioContext.createGain();\n    osc.connect(amplifier);\n    amplifier.gain.setValueAtTime(0, deadline);\n    amplifier.gain.linearRampToValueAtTime(\n      0.5,\n      deadline + 0.02\n    );\n    amplifier.gain.linearRampToValueAtTime(\n      0,\n      deadline + 0.20\n    );\n    amplifier.connect(audioContext.destination);\n    osc.start(deadline);\n\n    setTimeout(()=> {\n      osc.disconnect();\n      amplifier.disconnect();\n    }, 3000);\n  }","import React from 'react';\nimport './App.css';\nimport MetronomeContainer from './Metronome/MetronomeContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Simple Metronome</h1>\n        <MetronomeContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}